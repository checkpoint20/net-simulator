/*
NET-Simulator -- Network simulator.
Copyright (C) 2006 Maxim Tereshin <maxim-tereshin@yandex.ru>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
            
This program is distributed in the hope that it will be useful, but 
WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
General Public License for more details.
            
You should have received a copy of the GNU General Public License along 
with this program; if not, write to the Free Software Foundation, 
Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA 
*/


package org.netsimulator.gui;

import org.netsimulator.util.Config;
import org.netsimulator.util.LoggersConfig;

import javax.swing.*;
import javax.swing.event.TableModelEvent;
import java.awt.*;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;

public class SetupDialog 
        extends javax.swing.JDialog
{
    private static final ResourceBundle rsc = ResourceBundle.getBundle("netsimulator", Locale.getDefault());
    private LoggersConfig loggersConfig;
    private Config config;
    private Config updatedConfig;
    private final JComboBox levelsComboBox = new JComboBox();
    
    /** Creates new form SetupDialog */
    public SetupDialog(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        //loggersConfig = new LoggersConfig();
        levelsComboBox.addItem(Level.parse("OFF"));
        levelsComboBox.addItem(Level.parse("SEVERE"));
        levelsComboBox.addItem(Level.parse("WARNING"));
        levelsComboBox.addItem(Level.parse("INFO"));
        levelsComboBox.addItem(Level.parse("CONFIG"));
        levelsComboBox.addItem(Level.parse("FINE"));
        levelsComboBox.addItem(Level.parse("FINER"));
        levelsComboBox.addItem(Level.parse("FINEST"));
        levelsComboBox.addItem(Level.parse("ALL"));

        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelAfterLoading = new javax.swing.JLabel();
        jRadioButtonLastProject = new javax.swing.JRadioButton();
        jRadioButtonNewProject = new javax.swing.JRadioButton();
        jRadioButtonNothing = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonBackground = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonCancel = new javax.swing.JButton();
        jButtonOk = new javax.swing.JButton();

        setTitle(rsc.getString("Setup"));
        setBackground(java.awt.Color.white);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelAfterLoading.setText(rsc.getString("Open after start:"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 0);
        jPanel1.add(jLabelAfterLoading, gridBagConstraints);

        buttonGroup1.add(jRadioButtonLastProject);
        jRadioButtonLastProject.setText(rsc.getString("Last project"));
        jRadioButtonLastProject.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButtonLastProject.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButtonLastProject.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonLastProjectActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 10, 0);
        jPanel1.add(jRadioButtonLastProject, gridBagConstraints);

        buttonGroup1.add(jRadioButtonNewProject);
        jRadioButtonNewProject.setText(rsc.getString("New project"));
        jRadioButtonNewProject.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButtonNewProject.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButtonNewProject.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonNewProjectActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 10, 0);
        jPanel1.add(jRadioButtonNewProject, gridBagConstraints);

        buttonGroup1.add(jRadioButtonNothing);
        jRadioButtonNothing.setText(rsc.getString("Nothing"));
        jRadioButtonNothing.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jRadioButtonNothing.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jRadioButtonNothing.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonNothingActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 10, 0);
        jPanel1.add(jRadioButtonNothing, gridBagConstraints);

        jTabbedPane1.addTab(rsc.getString("General"), jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonBackground.setText(rsc.getString("Background"));
        jButtonBackground.setActionCommand(rsc.getString("Background"));
        jButtonBackground.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonBackgroundActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 15, 0, 0);
        jPanel2.add(jButtonBackground, gridBagConstraints);

        jTabbedPane1.addTab(rsc.getString("View"), jPanel2);

        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane1.addTab(rsc.getString("Debug"), jScrollPane1);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonCancel.setText(rsc.getString("Cancel"));
        jButtonCancel.setActionCommand(rsc.getString("Cancel"));
        jButtonCancel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButtonCancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonCancel, gridBagConstraints);

        jButtonOk.setText(rsc.getString("Continue"));
        jButtonOk.setAlignmentX(1.0F);
        jButtonOk.setAlignmentY(0.0F);
        jButtonOk.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonOk, gridBagConstraints);

        getContentPane().add(jPanel3, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * We need it to clear setups modifications when windows 
     * close button is pressed.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        updatedConfig.clear(); 
    }//GEN-LAST:event_formWindowClosing

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonOkActionPerformed
    {//GEN-HEADEREND:event_jButtonOkActionPerformed
        setVisible(false);
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCancelActionPerformed
    {//GEN-HEADEREND:event_jButtonCancelActionPerformed
        updatedConfig.clear(); 
        setVisible(false);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jRadioButtonNothingActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonNothingActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonNothingActionPerformed
        updatedConfig.setWhatOpenAfterStart("nothing");
    }//GEN-LAST:event_jRadioButtonNothingActionPerformed

    private void jRadioButtonLastProjectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonLastProjectActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonLastProjectActionPerformed
        updatedConfig.setWhatOpenAfterStart("lastProject");
    }//GEN-LAST:event_jRadioButtonLastProjectActionPerformed

    private void jRadioButtonNewProjectActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonNewProjectActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonNewProjectActionPerformed
        updatedConfig.setWhatOpenAfterStart("emptyProject");
    }//GEN-LAST:event_jRadioButtonNewProjectActionPerformed

    
    private void jButtonBackgroundActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBackgroundActionPerformed
    {//GEN-HEADEREND:event_jButtonBackgroundActionPerformed
        Color newColor = JColorChooser.showDialog(
                 this,
                 "Цвет фона",
                 config.getBackground() );

        if(newColor != null)
        {
            updatedConfig.setBackground(newColor);
        }
    }//GEN-LAST:event_jButtonBackgroundActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SetupDialog(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonBackground;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JLabel jLabelAfterLoading;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonLastProject;
    private javax.swing.JRadioButton jRadioButtonNewProject;
    private javax.swing.JRadioButton jRadioButtonNothing;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    
    public void setConfig(Config config)
    {
        this.config = config;
        
        String whatOpenAfterStart = config.getWhatOpenAfterStart();
        if(whatOpenAfterStart.equals("lastProject"))
        {
            jRadioButtonLastProject.setSelected(true);
        }
        if(whatOpenAfterStart.equals("emptyProject"))
        {
            jRadioButtonNewProject.setSelected(true);
        }   
        if(whatOpenAfterStart.equals("nothing"))
        {
            jRadioButtonNothing.setSelected(true);
        }

        loggersConfig = config.getDebug().clone();
        if(loggersConfig!=null)
        {
            jTable1.setModel(loggersConfig);
            jTable1.getColumnModel().getColumn(1).setCellEditor(
                    new DefaultCellEditor(levelsComboBox) );
            loggersConfig.addTableModelListener(new javax.swing.event.TableModelListener()
            {
                public void tableChanged(TableModelEvent e)
                {
                    jTableModelActionPerformed(e);
                }
            });
        }
        
        updatedConfig = new Config();
    }
         

    public void moveToCenterOfParentComponent()
    {
        setLocation( 
                getParent().getX() + (getParent().getWidth()-getWidth())/2,
                getParent().getY() + (getParent().getHeight()-getHeight())/2
        );
    } 
    
    
    Config getUpdatedConfig()
    {
        return updatedConfig;
    }

    
    private void jTableModelActionPerformed(javax.swing.event.TableModelEvent evt)                                                       
    {                                                           
        // prepare for saving
        updatedConfig.setDebug( loggersConfig );
    } 
    
}
